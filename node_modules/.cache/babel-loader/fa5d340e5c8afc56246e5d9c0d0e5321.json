{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nimport initialShopState from '.';\nconst initialState = {\n  products: initialShopState,\n  cart: {\n    items: [],\n    totalQuantity: 0\n  },\n  showCart: false\n};\nexport const shopSlice = createSlice({\n  name: 'shop',\n  initialState: initialState,\n  reducers: {\n    toggleShowCart(state) {\n      if (state.cart.items.length > 0) {\n        state.showCart = !state.showCart;\n      }\n    },\n\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.cart.items.find(item => item.id === newItem.id);\n\n      if (existingItem) {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + existingItem.price;\n      } else {\n        state.cart.items.push({\n          id: newItem.id,\n          title: newItem.title,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      }\n    },\n\n    increment(state, action) {\n      const existingCartItemIndex = state.cart.items.findIndex(item => item.id === action.payload);\n      const existingCartItem = state.cart.items[existingCartItemIndex];\n\n      if (existingCartItem) {\n        existingCartItem.quantity++;\n        existingCartItem.totalPrice = existingCartItem.totalPrice + existingCartItem.price;\n        state.cart.totalQuantity++;\n      }\n\n      ;\n    },\n\n    decrement(state, action) {\n      const existingCartItemIndex = state.cart.items.findIndex(item => item.id === action.payload);\n      const existingItem = state.cart.items[existingCartItemIndex];\n\n      if (existingItem.quantity === 1) {\n        state.cart.items = state.cart.items.filter(item => item.id !== action.payload.id);\n      } else {\n        existingItem.quantity--;\n      }\n\n      state.cart.totalQuantity--;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: shopSlice.reducer\n});\nexport const cartActions = shopSlice.actions;\nexport default store; //types\n// export type ShopStateType = typeof initialState;\n\n//@ts-ignore\nwindow.store = store;","map":{"version":3,"sources":["C:/Users/Uch/React/udemy course/online-shop-cart/src/store/cartStore.tsx"],"names":["configureStore","createSlice","initialShopState","initialState","products","cart","items","totalQuantity","showCart","shopSlice","name","reducers","toggleShowCart","state","length","addItemToCart","action","newItem","payload","existingItem","find","item","id","quantity","totalPrice","price","push","title","increment","existingCartItemIndex","findIndex","existingCartItem","decrement","filter","store","reducer","cartActions","actions","window"],"mappings":"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","sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit';\r\nimport { v1 } from 'uuid';\r\nimport initialShopState, { ShopStateType } from '.';\r\n\r\n\r\nconst initialState: initialStateType = {\r\n    products: initialShopState,\r\n    cart: {\r\n        items: [],\r\n        totalQuantity: 0\r\n    },\r\n    showCart: false\r\n};\r\n\r\nexport const shopSlice = createSlice({\r\n    name: 'shop',\r\n    initialState: initialState,\r\n    reducers: {\r\n        toggleShowCart(state) {\r\n            if (state.cart.items.length > 0) {\r\n                state.showCart = !state.showCart\r\n            }\r\n        },\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.cart.items.find(item => item.id === newItem.id);\r\n            if (existingItem) {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + existingItem.price;\r\n            } else {\r\n                state.cart.items.push(\r\n                    {\r\n                        id: newItem.id,\r\n                        title: newItem.title,\r\n                        price: newItem.price,\r\n                        quantity: 1,\r\n                        totalPrice: newItem.price,\r\n                    })\r\n            }\r\n        },\r\n        increment(state, action) {\r\n            const existingCartItemIndex = state.cart.items.findIndex(\r\n                (item) => item.id === action.payload\r\n            );\r\n            const existingCartItem = state.cart.items[existingCartItemIndex];\r\n\r\n            if (existingCartItem) {\r\n                existingCartItem.quantity++;\r\n                existingCartItem.totalPrice = existingCartItem.totalPrice + existingCartItem.price;\r\n                state.cart.totalQuantity++\r\n            };\r\n        },\r\n        decrement(state, action) {\r\n            const existingCartItemIndex = state.cart.items.findIndex(\r\n                (item) => item.id === action.payload\r\n            );\r\n            const existingItem = state.cart.items[existingCartItemIndex];\r\n            if (existingItem.quantity === 1) {\r\n                state.cart.items = state.cart.items.filter(item => item.id !== action.payload.id);\r\n            } else {\r\n                existingItem.quantity--;\r\n            }\r\n            state.cart.totalQuantity--\r\n        }\r\n    }\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer: shopSlice.reducer\r\n});\r\n\r\nexport const cartActions = shopSlice.actions;\r\n\r\ndeclare module 'react-redux' {\r\n    interface DefaultRootState extends initialStateType { }\r\n}\r\n\r\nexport default store;\r\n\r\n\r\n//types\r\n// export type ShopStateType = typeof initialState;\r\n\r\nexport type initialStateType = {\r\n    products: ShopStateType,\r\n    cart: {\r\n        items: CartItemType[],\r\n        totalQuantity: number\r\n    },\r\n    showCart: boolean\r\n}\r\n\r\n\r\ntype CartItemType = {\r\n    id: string,\r\n    title: string,\r\n    price: number,\r\n    quantity: number,\r\n    totalPrice: number,\r\n}\r\ntype StateItemType = {\r\n    id: string,\r\n    title: string,\r\n    price: number,\r\n    description: string,\r\n}\r\n\r\n\r\n//@ts-ignore\r\nwindow.store = store;\r\n\r\n"]},"metadata":{},"sourceType":"module"}